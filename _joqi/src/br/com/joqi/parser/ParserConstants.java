/* Generated By:JavaCC: Do not edit this line. ParserConstants.java */
package br.com.joqi.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SELECT = 5;
  /** RegularExpression Id. */
  int FROM = 6;
  /** RegularExpression Id. */
  int WHERE = 7;
  /** RegularExpression Id. */
  int HAVING = 8;
  /** RegularExpression Id. */
  int GROUP_BY = 9;
  /** RegularExpression Id. */
  int ORDER_BY = 10;
  /** RegularExpression Id. */
  int ASC = 11;
  /** RegularExpression Id. */
  int DESC = 12;
  /** RegularExpression Id. */
  int AND = 13;
  /** RegularExpression Id. */
  int OR = 14;
  /** RegularExpression Id. */
  int NOT = 15;
  /** RegularExpression Id. */
  int LIKE = 16;
  /** RegularExpression Id. */
  int IS = 17;
  /** RegularExpression Id. */
  int NULL = 18;
  /** RegularExpression Id. */
  int TRUE = 19;
  /** RegularExpression Id. */
  int FALSE = 20;
  /** RegularExpression Id. */
  int AS = 21;
  /** RegularExpression Id. */
  int BETWEEN = 22;
  /** RegularExpression Id. */
  int COUNT = 23;
  /** RegularExpression Id. */
  int SUM = 24;
  /** RegularExpression Id. */
  int AVG = 25;
  /** RegularExpression Id. */
  int MIN = 26;
  /** RegularExpression Id. */
  int MAX = 27;
  /** RegularExpression Id. */
  int CONCAT = 28;
  /** RegularExpression Id. */
  int LOWERCASE = 29;
  /** RegularExpression Id. */
  int UPPERCASE = 30;
  /** RegularExpression Id. */
  int TRIM = 31;
  /** RegularExpression Id. */
  int FORMAT_DATE = 32;
  /** RegularExpression Id. */
  int FORMAT_NUMBER = 33;
  /** RegularExpression Id. */
  int DATE = 34;
  /** RegularExpression Id. */
  int MAIS = 35;
  /** RegularExpression Id. */
  int MENOS = 36;
  /** RegularExpression Id. */
  int MULTIPLICA = 37;
  /** RegularExpression Id. */
  int DIVIDE = 38;
  /** RegularExpression Id. */
  int RESTO_DIVISAO = 39;
  /** RegularExpression Id. */
  int IGUAL = 40;
  /** RegularExpression Id. */
  int MAIOR = 41;
  /** RegularExpression Id. */
  int MENOR = 42;
  /** RegularExpression Id. */
  int MAIOR_IGUAL = 43;
  /** RegularExpression Id. */
  int MENOR_IGUAL = 44;
  /** RegularExpression Id. */
  int DIFERENTE = 45;
  /** RegularExpression Id. */
  int PONTO = 46;
  /** RegularExpression Id. */
  int VIRGULA = 47;
  /** RegularExpression Id. */
  int PONTO_E_VIRGULA = 48;
  /** RegularExpression Id. */
  int ASPA = 49;
  /** RegularExpression Id. */
  int ABRE_PARENTESE = 50;
  /** RegularExpression Id. */
  int FECHA_PARENTESE = 51;
  /** RegularExpression Id. */
  int DIGITOS = 52;
  /** RegularExpression Id. */
  int NUMERO = 53;
  /** RegularExpression Id. */
  int INICIO_IDENTIFICADOR = 54;
  /** RegularExpression Id. */
  int IDENTIFICADOR = 55;
  /** RegularExpression Id. */
  int TEXTO = 56;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\"select\"",
    "\"from\"",
    "\"where\"",
    "\"having\"",
    "\"group by\"",
    "\"order by\"",
    "\"asc\"",
    "\"desc\"",
    "\"and\"",
    "\"or\"",
    "\"not\"",
    "\"like\"",
    "\"is\"",
    "\"null\"",
    "\"true\"",
    "\"false\"",
    "\"as\"",
    "\"between\"",
    "\"count\"",
    "\"sum\"",
    "\"avg\"",
    "\"min\"",
    "\"max\"",
    "\"concat\"",
    "\"lowercase\"",
    "\"uppercase\"",
    "\"trim\"",
    "\"formatdate\"",
    "\"formatnumber\"",
    "\"date\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"=\"",
    "\">\"",
    "\"<\"",
    "\">=\"",
    "\"<=\"",
    "\"<>\"",
    "\".\"",
    "\",\"",
    "\";\"",
    "\"\\\'\"",
    "\"(\"",
    "\")\"",
    "<DIGITOS>",
    "<NUMERO>",
    "<INICIO_IDENTIFICADOR>",
    "<IDENTIFICADOR>",
    "<TEXTO>",
  };

}
